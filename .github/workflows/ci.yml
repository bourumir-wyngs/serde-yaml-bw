name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule: [cron: "40 1 * * *"]

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Rust ${{matrix.rust}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly, beta, stable]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{matrix.rust}}
      - name: Enable type layout randomization
        run: echo RUSTFLAGS=${RUSTFLAGS}\ -Zrandomize-layout >> $GITHUB_ENV
        if: matrix.rust == 'nightly'
      - run: cargo build
      - run: cargo test

  doc:
    name: Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - uses: rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
      - name: Install docs-rs tool
        run: cargo install --locked cargo-docs-rs
      - run: cargo docs-rs

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - run: cargo clippy --tests -- -Dclippy::all -Dclippy::pedantic

  miri:
    name: Miri
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: miri
      - run: cargo miri setup
      - run: cargo miri test
        env:
          MIRIFLAGS: -Zmiri-strict-provenance

  audit:
    name: Cargo Audit
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Install cargo-audit
        run: cargo install --locked cargo-audit
      - name: Run cargo audit
        run: cargo audit

  fuzz:
    name: Fuzzing
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: llvm-tools-preview
      - name: Install cargo-fuzz
        run: cargo install --locked cargo-fuzz
      - name: Run fuzz target
        run: cargo fuzz run fuzz_from_slice -- -max_total_time=60
